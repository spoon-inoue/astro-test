---
// export interface Props {
// 	title: string
// 	body: string
// 	href: string
// 	bgColor?: string
// }

type Props = {
	title: string
	href: string
	bgColor?: string
}

const { href, title, bgColor = '#fff' } = Astro.props
---

<li class="link-card">
	<a href={href}>
		<h2>
			{title}
			<span>&rarr;</span>
		</h2>
		<p>
			<slot />
		</p>
	</a>
</li>

<style lang="scss" define:vars={{ bgColor }}>
	@use '../styles/mixins/fonts.scss';

	@mixin transition($name: all) {
		transition-property: $name;
		transition-duration: 0.6s;
		transition-timing-function: cubic-bezier(0.22, 1, 0.36, 1);
	}

	.link-card {
		--progress: 0;
		filter: blur(calc(20px * var(--progress)));
		opacity: calc(1 - var(--progress));
		will-change: filter;

		list-style: none;
		display: flex;
		padding: 0.15rem;
		background-color: var(--bgColor);
		background-image: var(--accent-gradient);
		background-size: 400%;
		border-radius: 0.5rem;
		background-position: 100%;
		@include transition(background-position);
		box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);

		& > a {
			width: 100%;
			text-decoration: none;
			line-height: 1.4;
			padding: 1rem 1.3rem;
			border-radius: 0.35rem;
			color: #111;
			background-color: var(--bgColor);
			opacity: 0.8;
		}

		&:is(:hover, :focus-within) {
			background-position: 0;
			& h2 {
				color: rgb(var(--accent));
			}
		}
	}
	h2 {
		@include fonts.poppins(400);
		font-size: 1.25rem;
		@include transition(color);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
		color: #444;
	}
</style>

<script>
	import gsap from 'gsap'
	import ScrollTrigger from 'gsap/ScrollTrigger'
	gsap.registerPlugin(ScrollTrigger)

	const cards = document.querySelectorAll('.link-card')

	cards.forEach((card) => {
		gsap.fromTo(
			card,
			{ '--progress': 1 },
			{
				'--progress': 0,
				duration: 1,
				ease: 'power2.out',
				scrollTrigger: {
					trigger: card,
					start: 'bottom bottom',
				},
			}
		)
	})
</script>
